[{"/Users/hugnnt/Documents/Freland/test-deploy/test-deploy/src/index.js":"1","/Users/hugnnt/Documents/Freland/test-deploy/test-deploy/src/reportWebVitals.js":"2","/Users/hugnnt/Documents/Freland/test-deploy/test-deploy/src/Routers.js":"3","/Users/hugnnt/Documents/Freland/test-deploy/test-deploy/src/Redux/store.js":"4","/Users/hugnnt/Documents/Freland/test-deploy/test-deploy/src/Components/Notfound.js":"5","/Users/hugnnt/Documents/Freland/test-deploy/test-deploy/src/Components/NewFeeds/NewFeed.js":"6","/Users/hugnnt/Documents/Freland/test-deploy/test-deploy/src/Components/Login/Actions.js":"7","/Users/hugnnt/Documents/Freland/test-deploy/test-deploy/src/Components/Login/Login.js":"8","/Users/hugnnt/Documents/Freland/test-deploy/test-deploy/src/Components/CreateCareerTrack/CreateCareerTrack.js":"9","/Users/hugnnt/Documents/Freland/test-deploy/test-deploy/src/Components/CareerTracks/CareerTracks.js":"10","/Users/hugnnt/Documents/Freland/test-deploy/test-deploy/src/Components/ShareCareerTrack/ShareCareerTrack.js":"11","/Users/hugnnt/Documents/Freland/test-deploy/test-deploy/src/Components/CareerTracks/CareerTrackMobile.js":"12","/Users/hugnnt/Documents/Freland/test-deploy/test-deploy/src/Components/Register/Register.js":"13","/Users/hugnnt/Documents/Freland/test-deploy/test-deploy/src/Components/UserBio/UserBio.js":"14","/Users/hugnnt/Documents/Freland/test-deploy/test-deploy/src/Components/MyCareerTracks/MyCareerTrack.js":"15","/Users/hugnnt/Documents/Freland/test-deploy/test-deploy/src/Components/Search/SearchMobile.js":"16","/Users/hugnnt/Documents/Freland/test-deploy/test-deploy/src/Redux/reducers/index.js":"17","/Users/hugnnt/Documents/Freland/test-deploy/test-deploy/src/Components/Commons/Routes/PrivateRouter.js":"18","/Users/hugnnt/Documents/Freland/test-deploy/test-deploy/src/Components/Search/Search.js":"19","/Users/hugnnt/Documents/Freland/test-deploy/test-deploy/src/Components/CreateCareerTrack/Action.js":"20","/Users/hugnnt/Documents/Freland/test-deploy/test-deploy/src/Components/UserBio/Action.js":"21","/Users/hugnnt/Documents/Freland/test-deploy/test-deploy/src/Components/Commons/Fields/Input.js":"22","/Users/hugnnt/Documents/Freland/test-deploy/test-deploy/src/Utils/vars.js":"23","/Users/hugnnt/Documents/Freland/test-deploy/test-deploy/src/Redux/constants/actionTypes.js":"24","/Users/hugnnt/Documents/Freland/test-deploy/test-deploy/src/Apis/userApi.js":"25","/Users/hugnnt/Documents/Freland/test-deploy/test-deploy/src/Components/MyCareerTracks/Action.js":"26","/Users/hugnnt/Documents/Freland/test-deploy/test-deploy/src/Components/CareerTracks/Actions.js":"27","/Users/hugnnt/Documents/Freland/test-deploy/test-deploy/src/Components/Register/Actions.js":"28","/Users/hugnnt/Documents/Freland/test-deploy/test-deploy/src/Components/Commons/Modal/QuestionModal.js":"29","/Users/hugnnt/Documents/Freland/test-deploy/test-deploy/src/Redux/reducers/userR.js":"30","/Users/hugnnt/Documents/Freland/test-deploy/test-deploy/src/Redux/reducers/loadingR.js":"31","/Users/hugnnt/Documents/Freland/test-deploy/test-deploy/src/Redux/reducers/createNewTrackR.js":"32","/Users/hugnnt/Documents/Freland/test-deploy/test-deploy/src/Redux/reducers/careerTrackR.js":"33","/Users/hugnnt/Documents/Freland/test-deploy/test-deploy/src/Redux/reducers/myCareerTrackR.js":"34","/Users/hugnnt/Documents/Freland/test-deploy/test-deploy/src/Apis/careerTrackApi.js":"35","/Users/hugnnt/Documents/Freland/test-deploy/test-deploy/src/Apis/skillApi.js":"36","/Users/hugnnt/Documents/Freland/test-deploy/test-deploy/src/Apis/industryApi.js":"37","/Users/hugnnt/Documents/Freland/test-deploy/test-deploy/src/Apis/skillCategoryApi.js":"38","/Users/hugnnt/Documents/Freland/test-deploy/test-deploy/src/Apis/axiosClient.js":"39","/Users/hugnnt/Documents/Freland/test-deploy/test-deploy/src/Utils/functions.js":"40"},{"size":1123,"mtime":1672581523725,"results":"41","hashOfConfig":"42"},{"size":356,"mtime":1671861898877,"results":"43","hashOfConfig":"42"},{"size":4671,"mtime":1672855934599,"results":"44","hashOfConfig":"42"},{"size":349,"mtime":1671861898877,"results":"45","hashOfConfig":"42"},{"size":183,"mtime":1671864002186,"results":"46","hashOfConfig":"42"},{"size":298,"mtime":1672575984853,"results":"47","hashOfConfig":"42"},{"size":989,"mtime":1672850307240,"results":"48","hashOfConfig":"42"},{"size":8268,"mtime":1672854453577,"results":"49","hashOfConfig":"42"},{"size":34903,"mtime":1672847768070,"results":"50","hashOfConfig":"42"},{"size":6288,"mtime":1672848896191,"results":"51","hashOfConfig":"42"},{"size":635,"mtime":1672575984853,"results":"52","hashOfConfig":"42"},{"size":6837,"mtime":1672848943581,"results":"53","hashOfConfig":"42"},{"size":5684,"mtime":1672575984853,"results":"54","hashOfConfig":"42"},{"size":2097,"mtime":1672848663258,"results":"55","hashOfConfig":"42"},{"size":4447,"mtime":1672848638763,"results":"56","hashOfConfig":"42"},{"size":2697,"mtime":1672575984853,"results":"57","hashOfConfig":"42"},{"size":410,"mtime":1672756034327,"results":"58","hashOfConfig":"42"},{"size":306,"mtime":1672575984851,"results":"59","hashOfConfig":"42"},{"size":3430,"mtime":1672756034327,"results":"60","hashOfConfig":"42"},{"size":4220,"mtime":1672756034326,"results":"61","hashOfConfig":"42"},{"size":596,"mtime":1672677756558,"results":"62","hashOfConfig":"42"},{"size":887,"mtime":1672755802350,"results":"63","hashOfConfig":"42"},{"size":458,"mtime":1672756034328,"results":"64","hashOfConfig":"42"},{"size":596,"mtime":1672756034327,"results":"65","hashOfConfig":"42"},{"size":847,"mtime":1672850184804,"results":"66","hashOfConfig":"42"},{"size":1374,"mtime":1672756034326,"results":"67","hashOfConfig":"42"},{"size":1054,"mtime":1672333645281,"results":"68","hashOfConfig":"42"},{"size":1002,"mtime":1672575984853,"results":"69","hashOfConfig":"42"},{"size":1259,"mtime":1672756034325,"results":"70","hashOfConfig":"42"},{"size":457,"mtime":1672575984854,"results":"71","hashOfConfig":"42"},{"size":309,"mtime":1671866278195,"results":"72","hashOfConfig":"42"},{"size":300,"mtime":1672581523725,"results":"73","hashOfConfig":"42"},{"size":696,"mtime":1672152557832,"results":"74","hashOfConfig":"42"},{"size":300,"mtime":1672756034327,"results":"75","hashOfConfig":"42"},{"size":981,"mtime":1672756034324,"results":"76","hashOfConfig":"42"},{"size":338,"mtime":1672581523723,"results":"77","hashOfConfig":"42"},{"size":786,"mtime":1672581523722,"results":"78","hashOfConfig":"42"},{"size":261,"mtime":1672581523723,"results":"79","hashOfConfig":"42"},{"size":938,"mtime":1672854754312,"results":"80","hashOfConfig":"42"},{"size":640,"mtime":1672756034328,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"z574p1",{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115"},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122"},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126"},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130"},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134"},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138"},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148"},{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152"},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","suppressedMessages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","suppressedMessages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162"},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","suppressedMessages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169"},{"filePath":"170","messages":"171","suppressedMessages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173"},{"filePath":"174","messages":"175","suppressedMessages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","suppressedMessages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","suppressedMessages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183"},{"filePath":"184","messages":"185","suppressedMessages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","suppressedMessages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","suppressedMessages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"193","messages":"194","suppressedMessages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"196","messages":"197","suppressedMessages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","suppressedMessages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"202","messages":"203","suppressedMessages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"205","messages":"206","suppressedMessages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"208","messages":"209","suppressedMessages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"211","messages":"212","suppressedMessages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214"},{"filePath":"215","messages":"216","suppressedMessages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218"},"/Users/hugnnt/Documents/Freland/test-deploy/test-deploy/src/index.js",[],[],"/Users/hugnnt/Documents/Freland/test-deploy/test-deploy/src/reportWebVitals.js",[],[],"/Users/hugnnt/Documents/Freland/test-deploy/test-deploy/src/Routers.js",["219"],[],"import { Routes, Route, Outlet, redirect } from \"react-router-dom\";\nimport { memo, useMemo } from \"react\";\nimport { connect } from \"react-redux\";\nimport NotFound from \"./Components/Notfound\";\nimport Login from \"./Components/Login/Login\";\nimport PrivateRoute from \"./Components/Commons/Routes/PrivateRouter\";\nimport NewFeed from \"./Components/NewFeeds/NewFeed\";\nimport CreateCareerTrack from \"./Components/CreateCareerTrack/CreateCareerTrack\";\nimport CareerTrackMobile from \"./Components/CareerTracks/CareerTrackMobile\";\nimport SearchMobile from \"./Components/Search/SearchMobile\";\nimport Search from \"./Components/Search/Search\";\nimport CareerTracks from \"./Components/CareerTracks/CareerTracks\";\nimport ShareCareerTrack from \"./Components/ShareCareerTrack/ShareCareerTrack\";\nimport Profile from \"./Components/UserBio/UserBio\";\nimport Register from \"./Components/Register/Register\";\nimport MyCareerTrack from \"./Components/MyCareerTracks/MyCareerTrack\";\nimport { checkToken } from \"./Components/Login/Actions\";\n\nfunction PageLayout() {\n  return (\n    <>\n      {/* <div className=\"wavy-wraper\">\n        <div className=\"wavy\">\n          <span style={{ \"--i\": 1 }}>C</span>\n          <span style={{ \"--i\": 2 }}>A</span>\n          <span style={{ \"--i\": 3 }}>R</span>\n          <span style={{ \"--i\": 4 }}>E</span>\n          <span style={{ \"--i\": 5 }}>E</span>\n          <span style={{ \"--i\": 6 }}>R</span>\n          <span style={{ \"--i\": 7 }}>.</span>\n          <span style={{ \"--i\": 8 }}>.</span>\n          <span style={{ \"--i\": 9 }}>.</span>\n        </div>\n      </div> */}\n      <div className=\"theme-layout\">\n        <div className=\"postoverlay\"></div>\n        <div className=\"responsive-header\">\n          <div className=\"mh-head first Sticky\">\n            <span className=\"mh-btns-left\">\n              <a\n                className=\"\"\n                href=\"#careertrackmobile\"\n                data-toggle=\"modal\"\n                data-target=\"#careertrackmobile\"\n              >\n                <i className=\"fas fa-sliders-h\"></i>\n              </a>\n            </span>\n            <span className=\"mh-text\">\n              <a href=\"newsfeed.html\" title=\"\">\n                <img src=\"images/logo-mobile.jpg\" alt=\"\" />\n              </a>\n            </span>\n            <span className=\"mh-btns-right\">\n              <a\n                className=\"\"\n                href=\"#mainmenumobile\"\n                data-toggle=\"modal\"\n                data-target=\"#mainmenumobile\"\n              >\n                <i className=\"fas fa-align-justify\"></i>\n              </a>\n            </span>\n          </div>\n          <div className=\"mh-head second\">\n            <form className=\"mh-form\">\n              <input placeholder=\"search\" />\n              <a href=\"#/\" className=\"iconsearch fas fa-search\"></a>\n            </form>\n          </div>\n          {/* left menu for mobile */}\n          <CareerTrackMobile />\n          <SearchMobile />\n        </div>\n        <section>\n          <div className=\"gap2 gray-bg\">\n            <div className=\"container\">\n              <div className=\"row\">\n                <div className=\"col-lg-12\">\n                  <div className=\"row merged20\" id=\"page-contents\">\n                    <CareerTracks />\n                    <div className=\"col-lg-6\">\n                      <Profile />\n                      <ShareCareerTrack />\n                      <Outlet />\n                    </div>\n                    <Search />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n      </div>\n    </>\n  );\n}\n\nconst PageRouters = memo(() => {\n  useMemo(() => {\n    const token = localStorage.getItem(\"access-token\");\n    if (!token) {\n      redirect(\"/login\");\n    } else if (window.location.pathname !== \"/login\" && token) {\n      checkToken();\n    }\n  }, []);\n  return (\n    <Routes>\n      <Route path=\"/\" element={<PrivateRoute />}>\n        <Route element={<PageLayout />}>\n          <Route path=\"/\" element={<NewFeed />} />\n          <Route path=\"/newfeed\" element={<NewFeed />} />\n          <Route\n            path=\"/career-track/:id?/create\"\n            element={<CreateCareerTrack />}\n          />\n          <Route path=\"/my-career-tracks\" element={<MyCareerTrack />} />\n          <Route path=\"/career-track/:id?/update\" element={<CreateCareerTrack />} />\n        </Route>\n      </Route>\n\n      <Route path=\"/login\" element={<Login />} />\n      <Route path=\"/register\" element={<Register />} />\n      <Route path=\"*\" element={<NotFound />} />\n    </Routes>\n  );\n});\n\nconst mapStateToProps = ({ userR }) => ({ userR });\nexport default connect(mapStateToProps, null)(PageRouters);\n","/Users/hugnnt/Documents/Freland/test-deploy/test-deploy/src/Redux/store.js",[],[],"/Users/hugnnt/Documents/Freland/test-deploy/test-deploy/src/Components/Notfound.js",[],[],"/Users/hugnnt/Documents/Freland/test-deploy/test-deploy/src/Components/NewFeeds/NewFeed.js",[],[],"/Users/hugnnt/Documents/Freland/test-deploy/test-deploy/src/Components/Login/Actions.js",[],[],"/Users/hugnnt/Documents/Freland/test-deploy/test-deploy/src/Components/Login/Login.js",["220","221","222","223","224","225","226"],[],"import { Formik, Form, FastField } from \"formik\";\nimport React, { memo, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Navigate } from \"react-router\";\nimport InputField from \"../Commons/Fields/Input\";\nimport { login } from \"./Actions\"\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { useCookies } from 'react-cookie';\nimport {useRef} from 'react';\nimport * as Yup from 'yup';\n\nconst Login = memo((props) => {\n  const ref = useRef(null);\n  const { dispatch, userR = {} } = props;\n  const {isLogin, messageError} = userR;\n  const [cookies, setCookie] = useCookies();\n  useEffect(() => {\n\n  }, []);\n  \n\n  \n  const initialValues = {\n    username: cookies.username || \"\",\n    password: cookies.password || \"\"\n  };\n\n  const validationSchema = Yup.object().shape({\n    username: Yup.string().required('Username is required').email('Enter a valid email'),\n    password: Yup.string().required('Password is required')\n  })\n\n  const handleLoginSubmit = async function (values) {\n    const { username, password, remember_me: rememberMe } = values;\n    if(ref.current.checked){\n      setCookie('username', username, { path: '/' });\n      setCookie('password', password, { path: '/' });\n    }\n    dispatch(login({username, password}));\n  };\n\n  if (isLogin) {\n    toast.success('Login successfully!', {\n      position: \"top-center\",\n      autoClose: 1000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      theme: \"light\",\n    });\n\n    return <Navigate to={'../'} />\n  }\n\n  if (messageError){\n    toast.error(messageError, {\n      position: \"top-center\",\n      autoClose: 1000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      theme: \"light\",\n      });\n  }\n\n  return (\n    <>\n    <div className=\"www-layout\">\n      <section>\n        <div className=\"gap no-gap signin whitish medium-opacity\">\n          <div\n            className=\"bg-image\"\n            style={{ backgroundImage: \"url(images/resources/theme-bg.jpg)\" }}\n          ></div>\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-lg-8\">\n                <div className=\"big-ad\">\n                  <figure>\n                    <img src=\"images/logo2.png\" alt=\"\" />\n                  </figure>\n                  <h1>Welcome to the Career</h1>\n                  <p>\n                    Career is a social network template that can be used to\n                    connect people. use this template for multipurpose social\n                    activities like job, dating, posting, bloging and much more.\n                    Now join & Make Cool Friends around the world !!!\n                  </p>\n                  <p>\n                    <img src=\"images/login.png\" width=\"100%\" alt=\"\" />\n                  </p>\n                </div>\n              </div>\n              <div className=\"col-lg-4\">\n                <div className=\"we-login-register\">\n                  <div className=\"form-title\">\n                    <i className=\"fa fa-key\"></i>login\n                    <span>\n                      sign in now and meet the awesome Friends around the world.\n                    </span>\n                  </div>\n                  {/* {messageError && <div style={{color: \"red\"}}>{messageError}</div>} */}\n                  <Formik\n                    initialValues={initialValues}\n                    validationSchema={validationSchema}\n                    onSubmit={handleLoginSubmit}\n                  >\n                    {(formikProps) => {\n                      const { values, errors, touched } = formikProps;\n\n                      return (\n                        <Form className=\"we-form\">\n                          <FastField\n                            name=\"username\"\n                            type=\"text\"\n                            component={InputField}\n                            placeholder=\"Email\"\n                          />\n\n                          <FastField\n                            name=\"password\"\n                            type=\"password\"\n                            component={InputField}\n                            placeholder=\"Password\"\n                          />\n\n                          <input\n                            ref={ref}\n                            name=\"remember_me\"\n                            type=\"checkbox\"\n                          />\n                          <label>remember me</label>\n                          <div className=\"form-group\">\n                            <button\n                              className=\"btn btn-block btnsignin\"\n                            >\n                              Sign In\n                            </button>\n                          </div>\n                        </Form>\n                      );\n                    }}\n                  </Formik>\n                  <div className=\"\">\n                    <a className=\"forgotpass underline\" href=\"#\" title=\"\">\n                      forgot password?\n                    </a>\n                  </div>\n                  <span>\n                    Don't have an account?{\" \"}\n                    <a className=\"we-account underline\" href=\"/register\" title=\"\">\n                      register now\n                    </a>\n                  </span>\n                  <div\n                    id=\"or-separator\"\n                    className=\"or-separator mt-12 snapple-seperator\"\n                  >\n                    <span className=\"or-text\">or</span>\n                  </div>\n                  <a className=\"btn btn-block  btnweform\" href=\"#\" title=\"\">\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      width=\"22\"\n                      height=\"24\"\n                      viewBox=\"0 0 22 24\"\n                      fill=\"none\"\n                    >\n                      <path\n                        fillRule=\"evenodd\"\n                        clipRule=\"evenodd\"\n                        d=\"M12.1354 5.75C14.0004 5.75 15.4794 6.396 16.4204 7.33L19.0744 4.676C17.3544 3 14.9584 2 12.1354 2C8.1984 2 4.8554 4.148 3.1704 7.302L6.2004 9.7C7.0974 7.39 9.3304 5.75 12.1354 5.75Z\"\n                        fill=\"#E94435\"\n                      ></path>\n                      <path\n                        fillRule=\"evenodd\"\n                        clipRule=\"evenodd\"\n                        d=\"M5.7708 11.9896C5.7708 11.1806 5.9248 10.4106 6.2008 9.7006L3.1708 7.3016C2.4238 8.7006 1.9998 10.2946 1.9998 11.9896C1.9998 13.7206 2.4098 15.3266 3.1358 16.7256L6.1958 14.3026C5.9248 13.5956 5.7708 12.8206 5.7708 11.9896Z\"\n                        fill=\"#F8BB15\"\n                      ></path>\n                      <path\n                        fillRule=\"evenodd\"\n                        clipRule=\"evenodd\"\n                        d=\"M15.8107 17.3084C14.8667 17.8694 13.6267 18.2294 12.0107 18.2294C9.3627 18.2294 7.1007 16.6654 6.1957 14.3034L3.1357 16.7254C4.7837 19.9024 8.0767 22.0004 12.0107 22.0004C14.7537 22.0004 17.0727 21.1524 18.7877 19.6654L15.8107 17.3084Z\"\n                        fill=\"#34A751\"\n                      ></path>\n                      <path\n                        fillRule=\"evenodd\"\n                        clipRule=\"evenodd\"\n                        d=\"M22 11.9896C22 11.3086 21.931 10.6436 21.801 9.9996H12V13.9996H18.062L18.018 14.2496C17.784 15.4466 17.068 16.5606 15.811 17.3086L18.788 19.6656C20.818 17.9056 22 15.2466 22 11.9896Z\"\n                        fill=\"#547DBE\"\n                      ></path>\n                    </svg>\n                    <span className=\"btn-text\">Sign in with Google</span>\n                  </a>\n\n                  <a className=\"btn btn-block  btnweform\" href=\"#\" title=\"\">\n                    <i className=\"fab fa-linkedin\"></i>\n                    <span className=\"btn-text\">Sign in with Linkedin</span>\n                  </a>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    </div>\n    </>\n  );\n});\n\nconst mapStateToProps = ({userR}) => ({userR});\nexport default connect(mapStateToProps, null)(Login);\n","/Users/hugnnt/Documents/Freland/test-deploy/test-deploy/src/Components/CreateCareerTrack/CreateCareerTrack.js",["227","228","229"],[],"import React, { memo, useEffect, useState } from \"react\";\nimport { Formik, Form } from \"formik\";\nimport { connect } from \"react-redux\";\nimport * as yup from \"yup\";\nimport { Input } from \"reactstrap\";\nimport {\n  useParams,\n  useLocation,\n  useNavigate,\n  useSearchParams,\n} from \"react-router-dom\";\nimport * as action from \"./Action\";\nimport Select from \"react-select\";\nimport vars from \"../../Utils/vars\";\nimport { userBio } from \"../UserBio/Action\";\nimport { cloneDeep } from \"lodash\";\nconst CreateCareerTrack = memo((props) => {\n  const navigate = useNavigate();\n  const { dispatch } = props;\n  const query = useParams();\n  const { id } = query;\n  const params = useSearchParams();\n  const careerTrackId = params[0].get(\"career_track_id\");\n  const location = useLocation();\n  const type = location.pathname.includes(\"/create\") ? \"create\" : \"update\";\n  let formRef = null;\n  const initialCareerTrackSkill = (type = \"industry\") => {\n    const date = new Date();\n    const key = (date.getTime() * 1000 + date.getMilliseconds()).toString();\n    return {\n      [key]: {\n        key,\n        type,\n        skill_category_id: \"\",\n        skill_id: \"\",\n        what: \"\",\n        why: \"\",\n        desired_level: \"\",\n        external_desc_urls: \"\",\n        declared_confidence: \"\",\n        declared_objective: \"\",\n        errors: {},\n      },\n    };\n  };\n  const [industryOptions, setIndustryOptions] = useState([]);\n  const [derivedCareerTrackOption, setDeviredCareerTrackOptions] = useState([]);\n  const [categorySkillOptions, setCategorySkillOptions] = useState([]);\n  const [skillOptions, setSkillOptions] = useState([]);\n  const [careerTrackSkills, setCareerTrackSkills] = useState({});\n  const [nextCareerTrackOptions, setNextCareerTrackOptions] = useState([]);\n  const [initialValues, setInitialValues] = useState({\n    industry_id: id,\n    industry_name: \"\",\n    title: \"\",\n    desc: \"\",\n    is_public: 1,\n    status: \"\",\n    derived_career_track_id: \"\",\n    career_track_skills: [],\n    next_career_tracks: [],\n  });\n  useEffect(() => {\n    if (id) {\n      dispatch(action.getIndustryById({ industry_id: id })).then((resp) => {\n        const options = resp\n          ? [\n              {\n                value: resp.id,\n                label: resp.name_en,\n              },\n            ]\n          : [];\n        setIndustryOptions(options);\n      });\n      //get derived career track option\n      dispatch(action.getAllTrackByIndustry(id)).then((resp) => {\n        const options = resp.map((item) => {\n          return {\n            value: item.id,\n            label: item.title,\n          };\n        });\n        setDeviredCareerTrackOptions(options);\n      });\n    } else {\n      dispatch(action.getAllIndustry()).then((resp) => {\n        const options = resp.map((item) => {\n          return {\n            value: item.id,\n            label: item.name,\n          };\n        });\n        setIndustryOptions(options);\n      });\n    }\n    // get all category id\n    dispatch(action.getAllSkillCategory()).then((resp) => {\n      const options = resp.map((item) => {\n        return {\n          value: item.id,\n          label: item.name,\n        };\n      });\n      setCategorySkillOptions(options);\n    });\n    //get all skill\n    dispatch(action.getAllSkill()).then((resp) => {\n      const options = resp.map((item) => {\n        return {\n          value: item.id,\n          label: item.name,\n        };\n      });\n      setSkillOptions(options);\n    });\n    //get next career track\n    dispatch(userBio()).then((resp) => {\n      dispatch(action.getCareerTrackByUser(resp.id)).then((resp1) => {\n        const options = resp1.map((item) => {\n          return {\n            value: item.id,\n            label: item.title,\n          };\n        });\n        setNextCareerTrackOptions(options);\n        //set inintial value\n        if (careerTrackId) {\n          action.getCareerTrack(careerTrackId).then((resp) => {\n            const data = {\n              industry_id: id,\n              industry_name: \"\",\n              title: resp.title || \"\",\n              desc: resp.desc || \"\",\n              is_public: Number(resp.is_public) === 1 ? 1 : 2,\n              status: resp.status || \"\",\n              derived_career_track_id: resp.derived_career_track_id || \"\",\n              career_track_skills: resp.career_track_skills || [],\n              next_career_tracks: resp.next_career_tracks || [],\n            };\n            setInitialValues(data);\n          });\n        }\n      });\n    });\n  }, []);\n\n  const formValidation = yup.object().shape({\n    industry_id: yup.string().required(\"* field is require\"),\n    // derived_career_track_id: yup.string().required(\"* field is require\"),\n    title: yup\n      .string()\n      .trim()\n      .max(255, \"* must less than 256 charactor\")\n      .required(\"* field is require\"),\n    desc: yup\n      .string()\n      .trim()\n      .max(255, \"* must less than 256 charactor\")\n      .required(\"* field is require\")\n      .nullable(true),\n  });\n\n  const desiredLevelOptions = vars.desiredLevel.map((item) => ({\n    key: item,\n    value: item,\n    label: item,\n  }));\n  const renderSkills = (type = \"industry\") => {\n    const skills = Object.values(careerTrackSkills);\n    return skills\n      .filter((item) => item.type === type)\n      .map((item) => {\n        return (\n          <div key={item.key}>\n            <div className=\"skill-one\">\n              <div className=\"form-group\">\n                <label>Skill Category</label>\n                <Select\n                  options={categorySkillOptions}\n                  placeholder={\"Select...\"}\n                  styles={{\n                    option: (provider) => ({\n                      ...provider,\n                      color: \"#82898e\",\n                    }),\n                    control: (base) => ({\n                      ...base,\n                      ...selectCss,\n                    }),\n                  }}\n                  theme={(theme) => ({\n                    ...theme,\n                    colors: { ...theme.colors, primary: \"#4C9AFF\" },\n                  })}\n                  isSearchable={true}\n                  onChange={(e) =>\n                    onChangeSkillValue(\n                      { target: e },\n                      item.key,\n                      \"skill_category_id\"\n                    )\n                  }\n                />\n                {item.errors.skill_category_id ? (\n                  <label className=\"sd-error-text\">\n                    {item.errors.skill_category_id}\n                  </label>\n                ) : null}\n              </div>\n              <div className=\"form-group\">\n                <label>Skill</label>\n                <Select\n                  options={skillOptions}\n                  placeholder={\"Select...\"}\n                  styles={{\n                    option: (provider) => ({\n                      ...provider,\n                      color: \"#82898e\",\n                    }),\n                    control: (base) => ({\n                      ...base,\n                      ...selectCss,\n                    }),\n                  }}\n                  theme={(theme) => ({\n                    ...theme,\n                    colors: { ...theme.colors, primary: \"#4C9AFF\" },\n                  })}\n                  isSearchable={true}\n                  onChange={(e) =>\n                    onChangeSkillValue({ target: e }, item.key, \"skill_id\")\n                  }\n                />\n                {item.errors.skill_id ? (\n                  <label className=\"sd-error-text\">\n                    {item.errors.skill_id}\n                  </label>\n                ) : null}\n              </div>\n              <div className=\"form-group\">\n                <label>Why Is This Skill?</label>\n                <input\n                  onChange={(e) => onChangeSkillValue(e, item.key, \"why\")}\n                  type=\"text\"\n                  placeholder=\"Why Is This Skill?\"\n                  className=\"input-field\"\n                />\n                {item.errors.why ? (\n                  <label className=\"sd-error-text\">{item.errors.why}</label>\n                ) : null}\n              </div>\n              <div className=\"form-group\">\n                <label>What Is This Skill?</label>\n                <input\n                  onChange={(e) => onChangeSkillValue(e, item.key, \"what\")}\n                  type=\"text\"\n                  placeholder=\"What Is This Skill?\"\n                  className=\"input-field\"\n                />\n                {item.errors.what ? (\n                  <label className=\"sd-error-text\">{item.errors.what}</label>\n                ) : null}\n              </div>\n              <div className=\"form-group\">\n                <label>Desired Level</label>\n                <Select\n                  options={desiredLevelOptions}\n                  placeholder={\"Select...\"}\n                  styles={{\n                    option: (provider) => ({\n                      ...provider,\n                      color: \"#82898e\",\n                    }),\n                    control: (base) => ({\n                      ...base,\n                      ...selectCss,\n                    }),\n                  }}\n                  theme={(theme) => ({\n                    ...theme,\n                    colors: { ...theme.colors, primary: \"#4C9AFF\" },\n                  })}\n                  onChange={(e) =>\n                    onChangeSkillValue({ target: e }, item.key, \"desired_level\")\n                  }\n                />\n                {item.errors.desired_level ? (\n                  <label className=\"sd-error-text\">\n                    {item.errors.desired_level}\n                  </label>\n                ) : null}\n              </div>\n              <div className=\"form-group\">\n                <label>External Resources</label>\n                <input\n                  onChange={(e) =>\n                    onChangeSkillValue(e, item.key, \"external_desc_urls\")\n                  }\n                  type=\"text\"\n                  placeholder=\"External Resources\"\n                  className=\"input-field\"\n                />\n              </div>\n              <div className=\"form-group\">\n                <label>Career Planner's Objective</label>\n                <input\n                  onChange={(e) =>\n                    onChangeSkillValue(e, item.key, \"declared_objective\")\n                  }\n                  type=\"text\"\n                  placeholder=\"Career Planner's Objective\"\n                  className=\"input-field\"\n                />\n                {item.errors.declared_objective ? (\n                  <label className=\"sd-error-text\">\n                    {item.errors.declared_objective}\n                  </label>\n                ) : null}\n              </div>\n              <div className=\"form-group\">\n                <label>Career Planner's Confidence</label>\n                <Select\n                  options={desiredLevelOptions}\n                  placeholder={\"Select...\"}\n                  styles={{\n                    option: (provider) => ({\n                      ...provider,\n                      color: \"#82898e\",\n                    }),\n                    control: (base) => ({\n                      ...base,\n                      ...selectCss,\n                    }),\n                  }}\n                  theme={(theme) => ({\n                    ...theme,\n                    colors: { ...theme.colors, primary: \"#4C9AFF\" },\n                  })}\n                  onChange={(e) =>\n                    onChangeSkillValue(\n                      { target: e },\n                      item.key,\n                      \"declared_confidence\"\n                    )\n                  }\n                />\n                {item.errors.declared_confidence ? (\n                  <label className=\"sd-error-text\">\n                    {item.errors.declared_confidence}\n                  </label>\n                ) : null}\n              </div>\n              <a\n                className=\"btn btn-block btn-skillrmove\"\n                onClick={() => removeSkill(item.key)}\n              >\n                <i className=\"fa fa-times\"></i> Remove\n              </a>\n            </div>\n          </div>\n        );\n      });\n  };\n  const addSkill = (type) => {\n    let newSkill = initialCareerTrackSkill(type);\n    setCareerTrackSkills({ ...careerTrackSkills, ...newSkill });\n  };\n  const removeSkill = (key) => {\n    let skills = cloneDeep(careerTrackSkills);\n    delete skills[key];\n    setCareerTrackSkills(skills);\n  };\n  const onChangeSkillValue = (e, key, field) => {\n    const { value } = e.target;\n    let currentSkills = cloneDeep(careerTrackSkills);\n    currentSkills[key][field] = value;\n    switch (field) {\n      case \"skill_category_id\":\n      case \"skill_id\":\n      case \"desired_level\":\n      case \"declared_confidence\":\n      case \"declared_objective\":\n      case \"what\":\n      case \"why\":\n        if (!value) currentSkills[key].errors[field] = \"* Field is require!\";\n        else delete currentSkills[key].errors[field];\n        break;\n      default:\n        break;\n    }\n    setCareerTrackSkills(currentSkills);\n  };\n  const validateSkill = (careerTrackSkills) => {\n    const currentTrackSkills = cloneDeep(careerTrackSkills);\n    for (const key in currentTrackSkills) {\n      for (const iterator in currentTrackSkills[key]) {\n        switch (iterator) {\n          case \"skill_category_id\":\n          case \"skill_id\":\n          case \"desired_level\":\n          case \"declared_confidence\":\n          case \"declared_objective\":\n          case \"what\":\n          case \"why\":\n            if (!currentTrackSkills[key][iterator]) {\n              currentTrackSkills[key].errors = {\n                ...currentTrackSkills[key].errors,\n                [iterator]: \"* Field is require!\",\n              };\n            } else {\n              delete currentTrackSkills[key].errors[iterator];\n            }\n            break;\n          default:\n            break;\n        }\n      }\n    }\n    setCareerTrackSkills(currentTrackSkills);\n    return currentTrackSkills;\n  };\n  const renderError = (\n    errors,\n    touched = {},\n    field = \"\",\n    checkTouched = true\n  ) => {\n    return errors[field] && touched[field] && checkTouched ? (\n      <label className=\"sd-error-text\">{errors[field]}</label>\n    ) : null;\n  };\n  const onSubmit = (values, { resetForm }) => {\n    const validate = validateSkill(careerTrackSkills) || {};\n    for (const key in validate) {\n      if (validate[key].errors && Object.keys(validate[key].errors).length)\n        return;\n    }\n    let currentSkills = cloneDeep(careerTrackSkills);\n    currentSkills = Object.values(currentSkills);\n    currentSkills = currentSkills.map((item) => ({\n      skill_category_id: item.skill_category_id,\n      skill_id: item.skill_id,\n      what: item.what,\n      why: item.why,\n      desired_level: item.desired_level,\n      external_desc_urls: item.external_desc_urls\n        ? item.external_desc_urls.split(\",\")\n        : [],\n      declared_confidence: item.declared_confidence,\n      declared_objective: item.declared_objective,\n    }));\n\n    const {\n      title,\n      desc,\n      is_public,\n      status,\n      derived_career_track_id,\n      next_career_tracks,\n      industry_id,\n    } = values;\n    const body = {\n      industry_id,\n      title,\n      desc,\n      is_public: Number(is_public) === 1 ? true : false,\n      status,\n      derived_career_track_id,\n      next_career_tracks,\n      career_track_skills: currentSkills,\n    };\n    if (type === \"create\") {\n      dispatch(action.createCareerTrack(body)).then((resp) => {\n        if (resp) {\n          navigate(\"/\", { replace: true });\n          resetForm();\n        }\n      });\n    } else {\n      dispatch(action.updateCareerTrack(body)).then((resp) => {\n        if (resp) {\n          navigate(\"/\", { replace: true });\n          resetForm();\n        }\n      });\n    }\n  };\n\n  const selectCss = {\n    backgroundColor: \"#edf2f6\",\n    fontSize: \"13px\",\n    border: \"1px solid #e4e4e4\",\n  };\n  return (\n    <>\n      {(careerTrackId && initialValues.title) || !careerTrackId ? (\n        <Formik\n          initialValues={initialValues}\n          validationSchema={formValidation}\n          onSubmit={onSubmit}\n        >\n          {(formikProps) => {\n            const { handleSubmit, values, errors, touched, setFieldValue } =\n              formikProps;\n            formRef = formikProps;\n            return (\n              <Form className=\"c-form repeater\" onSubmit={handleSubmit}>\n                <div data-repeater-list=\"outer-list\">\n                  <div data-repeater-item>\n                    <div className=\"central-meta\">\n                      <div className=\"editing-interest\">\n                        <div className=\"career-form-area\">\n                          <div className=\"form-group\">\n                            {initialValues.industry_id ? (\n                              <label>\n                                Industry: {industryOptions[0]?.label}\n                              </label>\n                            ) : (\n                              <>\n                                <Select\n                                  id=\"industry_id\"\n                                  name=\"industry_id\"\n                                  options={industryOptions}\n                                  placeholder={\"Select...\"}\n                                  styles={{\n                                    option: (provider) => ({\n                                      ...provider,\n                                      color: \"#82898e\",\n                                    }),\n                                    control: (base) => ({\n                                      ...base,\n                                      ...selectCss,\n                                    }),\n                                    singleValue: (provider) => ({\n                                      ...provider,\n                                    }),\n                                  }}\n                                  theme={(theme) => ({\n                                    ...theme,\n                                    colors: {\n                                      ...theme.colors,\n                                      primary: \"#4C9AFF\",\n                                    },\n                                  })}\n                                  isLoading={false}\n                                  isSearchable={true}\n                                  onChange={({ value }) => {\n                                    setFieldValue(\"industry_id\", value);\n                                    dispatch(\n                                      action.getAllTrackByIndustry(value)\n                                    ).then((resp) => {\n                                      const options = resp.map((item) => {\n                                        return {\n                                          key: item.id,\n                                          value: item.id,\n                                          label: item.title,\n                                        };\n                                      });\n                                      setDeviredCareerTrackOptions(options);\n                                      setFieldValue(\"industry_id\", value);\n                                      setFieldValue(\n                                        \"derived_career_track_id\",\n                                        \"\"\n                                      );\n                                      touched.industry_id = true;\n                                    });\n                                  }}\n                                />\n                                {renderError(errors, touched, \"industry_id\")}\n                              </>\n                            )}\n                          </div>\n                          <div className=\"form-group\">\n                            <label>Derived Career Track</label>\n                            <Select\n                              placeholder=\"Select...\"\n                              name=\"derived_career_track_id\"\n                              options={derivedCareerTrackOption}\n                              defaultValue={\n                                initialValues.derived_career_track_id\n                              }\n                              isSearchable={true}\n                              isLoading={false}\n                              styles={{\n                                control: (base) => ({\n                                  ...base,\n                                  ...selectCss,\n                                }),\n                              }}\n                              onChange={({ value }) => {\n                                touched.derived_career_track_id = true;\n                                setFieldValue(\"derived_career_track_id\", value);\n                              }}\n                            />\n                            {renderError(\n                              errors,\n                              touched,\n                              \"derived_career_track_id\"\n                            )}\n                          </div>\n                          <div className=\"form-group\">\n                            <label>Title</label>\n                            <Input\n                              defaultValue={initialValues.title}\n                              name=\"title\"\n                              placeholder=\"title\"\n                              onChange={(e) => {\n                                touched.title = true;\n                                setFieldValue(\"title\", e.target.value);\n                              }}\n                            />\n                            {touched.title && errors.title ? (\n                              <label className=\"sd-error-text\">\n                                {errors.title}\n                              </label>\n                            ) : null}\n                          </div>\n                          <div className=\"form-group\">\n                            <label>Description</label>\n                            <Input\n                              type=\"textarea\"\n                              name=\"desc\"\n                              rows=\"3\"\n                              placeholder=\"Description\"\n                              defaultValue={initialValues.desc}\n                              onChange={(e) => {\n                                touched.desc = true;\n                                setFieldValue(\"desc\", e.target.value);\n                              }}\n                            />\n                            {touched.desc && errors.desc ? (\n                              <label className=\"sd-error-text\">\n                                {errors.desc}\n                              </label>\n                            ) : null}\n                          </div>\n                          <div className=\"form-group\">\n                            <label>Is Public</label>\n                            <div className=\"form-radio\">\n                              <div className=\"radio\">\n                                <label>\n                                  <Input\n                                    type=\"radio\"\n                                    name=\"is_public\"\n                                    value={1}\n                                    defaultChecked={\n                                      Number(values.is_public) === 1\n                                    }\n                                    onClick={() => {\n                                      setFieldValue(\"is_public\", 1);\n                                    }}\n                                  />\n                                  <i className=\"check-box\"></i>Yes\n                                </label>\n                              </div>\n                              <div className=\"radio\">\n                                <label>\n                                  <Input\n                                    type=\"radio\"\n                                    name=\"is_public\"\n                                    value={2}\n                                    defaultChecked={\n                                      Number(values.is_public) === 2\n                                    }\n                                    onClick={() => {\n                                      setFieldValue(\"is_public\", 2);\n                                    }}\n                                  />\n                                  <i className=\"check-box\"></i>No\n                                </label>\n                              </div>\n                            </div>\n                          </div>\n                          {/* <div className=\"form-group\">\n                        <label>Learning Resources</label>\n                        <FastField\n                          name=\"learning_resource\"\n                          component={InputField}\n                          require={true}\n                          placeholder=\"title\"\n                        />\n                      </div> */}\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"card card-warning central-meta collapsed-card\">\n                      <div className=\"card-header card-x-title\">\n                        <h3 className=\"card-title \">Industry Knowledge</h3>\n                        <div className=\"card-tools\">\n                          <button\n                            type=\"button\"\n                            className=\"btn btn-tool\"\n                            data-card-widget=\"collapse\"\n                          >\n                            <i className={\"fas fa-plus\"}></i>\n                          </button>\n                        </div>\n                        {/* <!-- /.card-tools --> */}\n                      </div>\n                      {/* <!-- /.card-header --> */}\n                      <div className=\"card-body\">\n                        <div className=\"career-form-area\">\n                          <div className=\"inner-repeater\">\n                            {renderSkills(\"industry\")}\n                            <button\n                              className=\"btn btn-grey\"\n                              type=\"button\"\n                              onClick={() => addSkill(\"industry\")}\n                            >\n                              <i className=\"fa fa-plus\"></i> Add skill\n                            </button>\n                          </div>\n                        </div>\n                      </div>\n                      {/* <!-- /.card-body --> */}\n                    </div>\n\n                    <div className=\"card card-warning central-meta  collapsed-card\">\n                      <div className=\"card-header card-x-title\">\n                        <h3 className=\"card-title \">Tools & Technologies</h3>\n\n                        <div className=\"card-tools\">\n                          <button\n                            type=\"button\"\n                            className=\"btn btn-tool\"\n                            data-card-widget=\"collapse\"\n                          >\n                            <i className=\"fas fa-plus\"></i>\n                          </button>\n                        </div>\n                        {/* <!-- /.card-tools --> */}\n                      </div>\n                      {/* <!-- /.card-header --> */}\n                      <div className=\"card-body\">\n                        <div className=\"career-form-area\">\n                          <div className=\"inner-repeater\">\n                            {renderSkills(\"tool_and_tech\")}\n                            <button\n                              className=\"btn btn-grey\"\n                              type=\"button\"\n                              onClick={() => addSkill(\"tool_and_tech\")}\n                            >\n                              <i className=\"fa fa-plus\"></i> Add skill\n                            </button>\n                          </div>\n                        </div>\n                      </div>\n                      {/* <!-- /.card-body --> */}\n                    </div>\n\n                    <div className=\"card card-warning central-meta  collapsed-card\">\n                      <div className=\"card-header card-x-title\">\n                        <h3 className=\"card-title \">Interpersonal Skills</h3>\n\n                        <div className=\"card-tools\">\n                          <button\n                            type=\"button\"\n                            className=\"btn btn-tool\"\n                            data-card-widget=\"collapse\"\n                          >\n                            <i className=\"fas fa-plus\"></i>\n                          </button>\n                        </div>\n                        {/* <!-- /.card-tools --> */}\n                      </div>\n                      {/* <!-- /.card-header --> */}\n                      <div className=\"card-body\">\n                        <div className=\"career-form-area\">\n                          <div className=\"inner-repeater\">\n                            {renderSkills(\"interpersional\")}\n                            <button\n                              className=\"btn btn-grey\"\n                              type=\"button\"\n                              onClick={() => addSkill(\"interpersional\")}\n                            >\n                              <i className=\"fa fa-plus\"></i> Add skill\n                            </button>\n                          </div>\n                        </div>\n                      </div>\n                      {/* <!-- /.card-body --> */}\n                    </div>\n\n                    <div className=\"card card-warning central-meta  collapsed-card\">\n                      <div className=\"card-header card-x-title\">\n                        <h3 className=\"card-title \">Other Skills</h3>\n\n                        <div className=\"card-tools\">\n                          <button\n                            type=\"button\"\n                            className=\"btn btn-tool\"\n                            data-card-widget=\"collapse\"\n                          >\n                            <i className=\"fas fa-plus\"></i>\n                          </button>\n                        </div>\n                        {/* <!-- /.card-tools --> */}\n                      </div>\n                      {/* <!-- /.card-header --> */}\n                      <div className=\"card-body\">\n                        <div className=\"career-form-area\">\n                          <div className=\"inner-repeater\">\n                            {renderSkills(\"other\")}\n                            <button\n                              className=\"btn btn-grey\"\n                              type=\"button\"\n                              onClick={() => addSkill(\"other\")}\n                            >\n                              <i className=\"fa fa-plus\"></i> Add skill\n                            </button>\n                          </div>\n                        </div>\n                      </div>\n                      {/* <!-- /.card-body --> */}\n                    </div>\n\n                    <div className=\"central-meta\">\n                      <div className=\"editing-interest\">\n                        <div className=\"career-form-area\">\n                          <div className=\"form-group\">\n                            <label>Next career tracks</label>\n                            <Select\n                              defaultValue={nextCareerTrackOptions.filter(\n                                (option) =>\n                                  initialValues.next_career_tracks.includes(\n                                    option.value\n                                  )\n                              )}\n                              id=\"next_career_tracks\"\n                              name=\"next_career_tracks\"\n                              options={nextCareerTrackOptions}\n                              isMulti={true}\n                              placeholder={\"Select...\"}\n                              styles={{\n                                option: (provider) => ({\n                                  ...provider,\n                                  color: \"#82898e\",\n                                }),\n                                control: (base) => ({\n                                  ...base,\n                                  ...selectCss,\n                                }),\n                                singleValue: (provider) => ({\n                                  ...provider,\n                                }),\n                              }}\n                              theme={(theme) => ({\n                                ...theme,\n                                colors: { ...theme.colors, primary: \"#4C9AFF\" },\n                              })}\n                              isLoading={false}\n                              isSearchable={true}\n                              onChange={(e) => {\n                                const value = e.map((item) => item.value);\n                                setFieldValue(\"next_career_tracks\", value);\n                                touched.next_career_tracks = true;\n                              }}\n                            />\n                          </div>\n                        </div>\n                        <div>\n                          <button\n                            type=\"button\"\n                            onClick={() => {\n                              setFieldValue(\"status\", \"published\");\n                              handleSubmit();\n                            }}\n                          >\n                            Complete & Post\n                          </button>\n                          <button\n                            type=\"button\"\n                            onClick={() => {\n                              setFieldValue(\"status\", \"new\");\n                              handleSubmit();\n                            }}\n                          >\n                            Complete\n                          </button>\n                          <button\n                            type=\"button\"\n                            onClick={() => {\n                              setFieldValue(\"status\", \"outdated\");\n                              handleSubmit();\n                            }}\n                          >\n                            Save Draft\n                          </button>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </Form>\n            );\n          }}\n        </Formik>\n      ) : null}\n    </>\n  );\n});\n\nconst mapStateToProps = ({ createNewTrackR, userR }) => ({\n  createNewTrackR,\n  userR,\n});\nexport default connect(mapStateToProps, null)(CreateCareerTrack);\n","/Users/hugnnt/Documents/Freland/test-deploy/test-deploy/src/Components/CareerTracks/CareerTracks.js",["230","231","232","233","234","235","236"],[],"import React, { memo, useEffect } from \"react\";\nimport $ from \"jquery\";\nimport { connect } from \"react-redux\";\nimport { getIndustries } from \"./Actions\";\nimport { Link } from \"react-router-dom\";\n\nconst CareerTracks = memo((props) => {\n  /*------- Hook ---------*/\n  const { dispatch, careerTrackR = {} } = props;\n\n  const menuItems = careerTrackR.items || [];\n  const { total = 0, last_evaluated_key } = careerTrackR;\n  useEffect(() => {\n    dispatch(getIndustries({ limit: 10 }));\n  }, []);\n\n  /*------- Actions ---------*/\n  const expandOrCloseSubMenu = () => {\n    $(\".listitemmulti\").each(function () {\n      $(this).children(\"li\").children(\"a \").unbind();\n      $(this)\n        .children(\"li\")\n        .children(\"a \")\n        .bind(\"click\", function () {\n          var parent = $(this).parent();\n          var boxsub = $(parent).children(\"ul.listitemchild\");\n          if ($(boxsub).children(\"li\").length > 0) {\n            if ($(boxsub).css(\"display\") == \"none\") {\n              $(boxsub).slideToggle(500);\n            } else {\n              $(boxsub).slideToggle(500);\n            }\n          }\n        });\n    });\n  };\n\n  const formatLabelName = (str = \"\") => {\n    if (str.length < 22) return str;\n    const arrStr = str.split(\" \");\n    if (arrStr[0].length >= 22) {\n      return arrStr[0].slice(0, 21) + \"...\";\n    }\n    let result = arrStr[0];\n    for (let i = 1; i < arrStr.length; i++) {\n      const strTmp = `${result} ${arrStr[i]}`;\n      if (strTmp.length >= 22) return `${result}...`;\n      result = strTmp;\n    }\n    return result;\n  };\n\n  const loadMoreIndustries = () => {\n    dispatch(getIndustries({ limit: total + 10 }));\n  };\n  return (\n    <div className=\"col-lg-3 mobileremove\">\n      <aside className=\"sidebar static left\">\n        <div className=\"widget  low-opacity\">\n          <div className=\"widget-logo\">\n            <img src=\"images/logo.jpg\" alt=\"\" />\n            <span className=\"slogan\">\n              {\" \"}\n              Plan a career that you're desired to work!\n            </span>\n          </div>\n        </div>\n\n        <div className=\"widget \">\n          <h4 className=\"widget-title\">Carrer track</h4>\n          <ul className=\"naves listitemmulti carrer-track-area\">\n            {menuItems.map((item) => {\n              return (\n                <li\n                  onClick={() => {\n                    expandOrCloseSubMenu();\n                  }}\n                  key={`track-menu-${item.id}`}\n                  title={item.name}\n                >\n                  <a className=\"item-link\">\n                    <i className=\"fas fa-angle-double-right\"></i>{\" \"}\n                    {formatLabelName(item.name)} (\n                    {item.total_career_tracks || 0})\n                  </a>\n                  <span className=\"actionbox\">\n                    <a\n                      className=\"nav-link dropdown-toggle\"\n                      data-toggle=\"dropdown\"\n                      aria-haspopup=\"true\"\n                      aria-expanded=\"false\"\n                    >\n                      <i className=\"fas fa-chevron-down\"></i>{\" \"}\n                    </a>\n                    <ul className=\"dropdown-menu dropdown-menu-right\">\n                      <li className=\"nav-item\">\n                        <Link\n                          reloadDocument={true}\n                          to={{\n                            pathname: `/career-track/${item.id.replace(\n                              \"#\",\n                              \"%23\"\n                            )}/create`,\n                            state: { type: \"create\" },\n                          }}\n                        >\n                          Add new track\n                        </Link>\n                      </li>\n                    </ul>\n                  </span>\n                  <ul className=\"listitemchild\">\n                    {item.careerTracks.map((career) => {\n                      return (\n                        <li key={career.id}>\n                          <a className=\"active\" title=\"\" data-ripple>\n                            {\" \"}\n                            {career.name}\n                          </a>\n                          <span className=\"actionbox\">\n                            <a\n                              className=\"nav-link dropdown-toggle\"\n                              data-toggle=\"dropdown\"\n                              aria-haspopup=\"true\"\n                              aria-expanded=\"false\"\n                            >\n                              <i className=\"fas fa-chevron-down\"></i>{\" \"}\n                            </a>\n                            <ul className=\"dropdown-menu dropdown-menu-right\">\n                              <li className=\"nav-item\">\n                                <a title=\"\" className=\"nav-link\">\n                                  View\n                                </a>\n                              </li>\n                              <li className=\"nav-item\">\n                                <Link\n                                  reloadDocument={true}\n                                  to={{\n                                    pathname: `/career-track/${item.id.replace(\n                                      \"#\",\n                                      \"%23\"\n                                    )}/create`,\n                                    state: { type: \"create\" },\n                                  }}\n                                >\n                                  Add new track\n                                </Link>\n                              </li>\n                            </ul>\n                          </span>\n                        </li>\n                      );\n                    })}\n                  </ul>\n                </li>\n              );\n            })}\n          </ul>\n          {last_evaluated_key ? (\n            <div className=\"lodmore\">\n              <button\n                className=\"btn-view btn-load-more\"\n                onClick={() => {\n                  loadMoreIndustries();\n                }}\n              ></button>\n            </div>\n          ) : null}\n        </div>\n      </aside>\n    </div>\n  );\n});\n\nconst mapStateToProps = ({ careerTrackR }) => ({ careerTrackR });\nexport default connect(mapStateToProps, null)(CareerTracks);\n","/Users/hugnnt/Documents/Freland/test-deploy/test-deploy/src/Components/ShareCareerTrack/ShareCareerTrack.js",[],[],"/Users/hugnnt/Documents/Freland/test-deploy/test-deploy/src/Components/CareerTracks/CareerTrackMobile.js",["237","238","239","240","241","242"],[],"import React, { memo, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport $ from \"jquery\";\nimport { Link } from \"react-router-dom\";\nimport { getIndustries, getCareerByIndustry } from \"./Actions\";\n\nconst Careertrackmobile = memo((props) => {\n  /*------- Hook ---------*/\n  const { dispatch, careerTrackR = {} } = props;\n  const { last_evaluated_key } = careerTrackR;\n  const menuItems = careerTrackR.items || [];\n  const { total = 0 } = careerTrackR;\n  useEffect(() => {}, []);\n\n  /*------- Actions ---------*/\n  const expandOrCloseSubMenu = (industry_id) => {\n    if (!industry_id) return;\n    dispatch(getCareerByIndustry(industry_id));\n    $(\".listitemmulti\").each(function () {\n      $(this).children(\"li\").children(\"a \").unbind();\n      $(this)\n        .children(\"li\")\n        .children(\"a \")\n        .bind(\"click\", function () {\n          var parent = $(this).parent();\n          var boxsub = $(parent).children(\"ul.listitemchild\");\n          if ($(boxsub).children(\"li\").length > 0) {\n            if ($(boxsub).css(\"display\") == \"none\") {\n              $(boxsub).slideToggle(500);\n            } else {\n              $(boxsub).slideToggle(500);\n            }\n          }\n        });\n    });\n  };\n\n  const formatLabelName = (str = \"\") => {\n    if (str.length < 38) return str;\n    const arrStr = str.split(\" \");\n    if (arrStr[0].length >= 38) {\n      return arrStr[0].slice(0, 37) + \"...\";\n    }\n    let result = arrStr[0];\n    for (let i = 1; i < arrStr.length; i++) {\n      const strTmp = `${result} ${arrStr[i]}`;\n      if (strTmp.length >= 38) return `${result}...`;\n      result = strTmp;\n    }\n    return result;\n  };\n\n  const loadMoreIndustries = () => {\n    dispatch(getIndustries({ limit: total + 10 }));\n  };\n  return (\n    <div\n      className=\"modal fade modal-fullscreen\"\n      id=\"careertrackmobile\"\n      tabIndex=\"-1\"\n      role=\"dialog\"\n      aria-labelledby=\"exampleModalLabel\"\n      aria-hidden=\"true\"\n    >\n      <div className=\"modal-dialog\" role=\"document\">\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <h5 className=\"modal-title\" id=\"exampleModalLabel\">\n              Carrer Track\n            </h5>\n            <button\n              type=\"button\"\n              className=\"close\"\n              data-dismiss=\"modal\"\n              aria-label=\"Close\"\n            >\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </div>\n          <div className=\"modal-body\">\n            <ul className=\"naves listitemmulti carrer-track-area\">\n              {menuItems.map((item) => {\n                return (\n                  <li\n                    onClick={() => {\n                      expandOrCloseSubMenu(item.id);\n                    }}\n                    key={item.id}\n                    title={item.name}\n                  >\n                    <a className=\"item-link\">\n                      <i className=\"fas fa-angle-double-right\"></i>{\" \"}\n                      {formatLabelName(item.name)} (\n                      {item.total_career_tracks || 0})\n                    </a>\n                    <span className=\"actionbox\">\n                      <a\n                        className=\"nav-link dropdown-toggle\"\n                        data-toggle=\"dropdown\"\n                        aria-haspopup=\"true\"\n                        aria-expanded=\"false\"\n                      >\n                        <i className=\"fas fa-chevron-down\"></i>{\" \"}\n                      </a>\n                      <ul className=\"dropdown-menu dropdown-menu-right\">\n                        <li className=\"nav-item\">\n                          <Link\n                            reloadDocument={true}\n                            to={{\n                              pathname: `/career-track/${item.id.replace(\n                                \"#\",\n                                \"%23\"\n                              )}/create`,\n                              state: { type: \"create\" },\n                            }}\n                          >\n                            Add new track\n                          </Link>\n                        </li>\n                      </ul>\n                    </span>\n                    <ul className=\"listitemchild\">\n                      {item.careerTracks.map((career) => {\n                        return (\n                          <li key={career.id}>\n                            <a className=\"active\" title=\"\" data-ripple>\n                              {\" \"}\n                              {career.name}\n                            </a>\n                            <span className=\"actionbox\">\n                              <a\n                                className=\"nav-link dropdown-toggle\"\n                                data-toggle=\"dropdown\"\n                                aria-haspopup=\"true\"\n                                aria-expanded=\"false\"\n                              >\n                                <i className=\"fas fa-chevron-down\"></i>{\" \"}\n                              </a>\n                              <ul className=\"dropdown-menu dropdown-menu-right\">\n                                <li className=\"nav-item\">\n                                  <a title=\"\" className=\"nav-link\">\n                                    View\n                                  </a>\n                                </li>\n                                <li className=\"nav-item\">\n                                  <Link\n                                    reloadDocument={true}\n                                    to={{\n                                      pathname: `/career-track/${item.id.replace(\n                                        \"#\",\n                                        \"%23\"\n                                      )}/create`,\n                                      state: { type: \"create\" },\n                                    }}\n                                  >\n                                    Add new track\n                                  </Link>\n                                </li>\n                              </ul>\n                            </span>\n                          </li>\n                        );\n                      })}\n                    </ul>\n                  </li>\n                );\n              })}\n            </ul>\n            {last_evaluated_key ? (\n              <div className=\"lodmore\">\n                <button\n                  className=\"btn-view btn-load-more\"\n                  onClick={() => {\n                    loadMoreIndustries();\n                  }}\n                ></button>\n              </div>\n          ) : null}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n});\n\nconst mapStateToProps = ({ careerTrackR }) => ({ careerTrackR });\nexport default connect(mapStateToProps, null)(Careertrackmobile);\n","/Users/hugnnt/Documents/Freland/test-deploy/test-deploy/src/Components/Register/Register.js",["243","244","245","246"],[],"import { Formik, Form, FastField } from \"formik\";\nimport React, { memo, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Navigate } from \"react-router\";\nimport InputField from \"../Commons/Fields/Input\";\nimport { register } from \"./Actions\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport * as Yup from 'yup'\n\nconst Register = memo((props) => {\n  useEffect(() => {}, []);\n  const { dispatch, userR = {} } = props;\n  const { registerSuccess, messageError } = userR;\n\n  const initialValues = {\n    name: \"\",\n    email: \"\",\n    password: \"\",\n  };\n\n  const validationSchema = Yup.object().shape({\n    email: Yup.string().required('Email is required').email('Enter a valid email'),\n    password: Yup.string().required('Password is required')\n  })\n\n  const handleRegisterSubmit = async function (values) {\n    const { name, email, password } = values;\n    dispatch(register({ name, email, password }));\n  };\n\n  if(localStorage.getItem('access-token')){\n    toast.warn(\"Please logout to register!\",{\n    position: \"top-center\",\n    autoClose: 1000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n    theme: \"light\",}\n    )\n    return <Navigate to={'../'} />\n  }\n\n  if (registerSuccess) {\n    toast.success(\"Register successfully. Please login\", {\n      position: \"top-center\",\n      autoClose: 1000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      theme: \"light\",\n    });\n\n    return <Navigate to={\"../login\"} />;\n  }\n\n  if (!registerSuccess && messageError) {\n    toast.error(messageError, {\n      position: \"top-center\",\n      autoClose: 1000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      theme: \"light\",\n    });\n  }\n\n  return (\n    <div className=\"www-layout\">\n      <section>\n        <div className=\"gap no-gap signin whitish medium-opacity\">\n          <div\n            className=\"bg-image\"\n            style={{ backgroundImage: \"url(images/resources/theme-bg.jpg)\" }}\n          />\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-lg-8\">\n                <div className=\"big-ad\">\n                  <figure>\n                    <img src=\"images/logo2.png\" alt='' />\n                  </figure>\n                  <h1>Welcome to the Career</h1>\n                  <p>\n                    Career is a social network template that can be used to\n                    connect people. use this template for multipurpose social\n                    activities like job, dating, posting, bloging and much more.\n                    Now join &amp; Make Cool Friends around the world !!!\n                  </p>\n                  <p>\n                    <img src=\"images/login.png\" width=\"100%\" />\n                  </p>\n                </div>\n              </div>\n              <div className=\"col-lg-4\">\n                <div className=\"we-login-register\">\n                  <div className=\"form-title\">\n                    <i className=\"fa fa-key\" />\n                    Sign Up\n                    <span>\n                      Sign Up now and meet the awesome friends around the\n                      world..\n                    </span>\n                  </div>\n                  <Formik\n                    initialValues={initialValues}\n                    validationSchema={validationSchema}\n                    onSubmit={handleRegisterSubmit}\n                  >\n                    {(formikProps) => {\n                      const { values, errors, touched } = formikProps;\n\n                      return (\n                        <Form className=\"we-form\">\n                           <FastField\n                            name=\"name\"\n                            type=\"text\"\n                            component={InputField}\n                            placeholder=\"Name\"\n                          />\n\n                          <FastField\n                            name=\"email\"\n                            type=\"text\"\n                            component={InputField}\n                            placeholder=\"Email\"\n                          />\n\n                          <FastField\n                            name=\"password\"\n                            type=\"password\"\n                            component={InputField}\n                            placeholder=\"Password\"\n                          />\n\n                          <div  className=\" privacytext\">\n                            By clicking Agree &amp; Join, you agree to the\n                            Career User Agreement, Privacy Policy, and Cookie\n                            Policy.\n                          </div>\n                          <div className=\"form-group\">\n                            <button className=\"btn btn-block btnsignin\">\n                              Sign up\n                            </button>\n                          </div>\n                        </Form>\n                      );\n                    }}\n                  </Formik>\n                  <span>\n                    already have an account?{\" \"}\n                    <a className=\"we-account underline\" href=\"./login\" title=''>\n                      Sign in\n                    </a>\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n});\n\nconst mapStateToProps = ({ userR }) => ({ userR });\nexport default connect(mapStateToProps, null)(Register);\n","/Users/hugnnt/Documents/Freland/test-deploy/test-deploy/src/Components/UserBio/UserBio.js",["247","248","249"],[],"import React, { memo, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { userBio } from \"./Action\"\nconst Profile = memo((props) => {\n  const { dispatch, userR = {} } = props;\n  const userProfile = userR.userProfile;\n  useEffect(() => {\n    dispatch(userBio());\n  }, []);\n\n  return (\n    <div className=\"user-profile\">\n      <figure>\n        <div className=\"edit-pp\">\n          <label className=\"fileContainer\">\n            <i className=\"fas fa-camera\"></i>\n            <input type=\"file\" />\n          </label>\n        </div>\n        <img src={userProfile?.cover_photo_path} alt=\"cover photo\" />\n        <ul className=\"profile-controls\">\n          <li>\n            <div className=\"edit-seting\" title=\"Edit Profile image\">\n              <i className=\"fas fa-sliders-h\"></i>\n              <ul className=\"more-dropdown\">\n                <li>\n                  <a href=\"#\" data-toggle=\"modal\" data-target=\"#editprofile\">\n                    Update Profile Photo\n                  </a>\n                </li>\n              </ul>\n            </div>\n          </li>\n        </ul>\n      </figure>\n      <div className=\"profile-section\">\n        <div className=\"row\">\n          <div className=\"col-lg-4 col-md-4\">\n            <div className=\"profile-author\">\n              <div className=\"profile-author-thumb\">\n                <img alt=\"author\" src={userProfile?.photo_path} />\n                <div className=\"edit-dp\">\n                  <label className=\"fileContainer\">\n                    <i className=\"fas fa-camera\"></i>\n                    <input type=\"file\" />\n                  </label>\n                </div>\n              </div>\n\n              <div className=\"author-content\">\n                <a className=\"h4 author-name\" href=\"about.html\">\n                  {userProfile?.name}\n                </a>\n                <div className=\"country\">Ontario, CA</div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n});\n\nconst mapStateToProps = ({ userR }) => ({ userR });\nexport default connect(mapStateToProps, null)(Profile);\n","/Users/hugnnt/Documents/Freland/test-deploy/test-deploy/src/Components/MyCareerTracks/MyCareerTrack.js",["250"],[],"import React, { memo, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as action from \"./Action\";\nimport QuestionModal from \"../Commons/Modal/QuestionModal\";\nimport { useNavigate } from \"react-router-dom\";\nimport { userBio } from \"../UserBio/Action\";\n\nconst MyCareerTrack = memo((props) => {\n  const navigate = useNavigate();\n  const { dispatch, userR, myCareerTrackR } = props;\n  const { userProfile = {} } = userR;\n  const { id } = userProfile;\n  const { trackList = [] } = myCareerTrackR;\n  const [idSelected, setIdSelected] = useState(null);\n\n  const getData = (id) => {\n    if(id) {\n      dispatch(action.getCareerTrackByUser(id));\n    } else {\n      dispatch(userBio()).then(resp => {\n        if(resp.id) {\n          dispatch(action.getCareerTrackByUser(resp.id));\n        }\n      });\n    }\n  };\n  useEffect(() => {\n    getData(id);\n  }, []);\n\n  const handleUpdateTrack = (item) => {\n    navigate({\n      pathname: `/career-track/${item.industry_id.replace(\"#\", \"%23\")}/update`,\n      search: `career_track_id=${item.id.replace(\"#\", \"%23\")}`,\n    });\n  };\n\n  const handleOpenDelete = (id) => {\n    setIdSelected(id);\n  };\n\n  const deleteCareerTrack = () => {\n    if (idSelected) {\n      action.deleteCareerTrack(idSelected).then(() => {\n        document.getElementById(\"close-delete-track-modal\").click();\n        getData(id);\n      });\n    }\n  };\n  return (\n    <>\n      <div className=\"central-meta\">\n        <div className=\"editing-interest\">\n          <span className=\"create-post\">\n            <i className=\"far fa-bell\"></i> My Career track\n          </span>\n          <div className=\"my-list-career\">\n            {trackList.length ? (\n              <table className=\"cr-table table table-responsive\">\n                <thead>\n                  <tr>\n                    <th>Post Date</th>\n                    <th>Posts</th>\n                    <th>Action</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {trackList.map((item) => (\n                    <tr key={item.id}>\n                      <td className=\"date-n-reply\">\n                        <span>{}</span>\n                        <div className=\"verification\">\n                          {item.is_public ? (\n                            <em className=\"verify\">\n                              <i className=\"fa fa-check-circle\"></i> Public\n                            </em>\n                          ) : (\n                            <em className=\"\">\n                              <i className=\"fa fa-check-circle\"></i> Not Public\n                            </em>\n                          )}\n                        </div>\n                      </td>\n                      <td className=\"my-list-career-title\">\n                        <p>{item.title}</p>\n                      </td>\n                      <td className=\"colactionbutton\">\n                        <div className=\"buttons\">\n                          <button\n                            className=\"main-btn2 send-mesg\"\n                            style={{ color: \"#27995b\" }}\n                            onClick={() => handleUpdateTrack(item)}\n                          >\n                            Edit\n                          </button>\n                          <button\n                            className=\"main-btn\"\n                            data-toggle=\"modal\"\n                            data-target=\"#delete-career-track\"\n                            style={{ color: \"white\" }}\n                            onClick={() => {\n                              handleOpenDelete(item.id);\n                            }}\n                          >\n                            Delete\n                          </button>\n                        </div>\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            ) : (\n              <h4>You don't have any career track yet.</h4>\n            )}\n          </div>\n        </div>\n      </div>\n      <QuestionModal\n        isOpen={false}\n        id={\"delete-career-track\"}\n        header={\"Delete career track\"}\n        content={\"Do you want delete this career track?\"}\n        handleSubmit={deleteCareerTrack}\n        handleClose={null}\n      />\n    </>\n  );\n});\n\nconst mapStateToProps = ({ myCareerTrackR, userR }) => ({\n  myCareerTrackR,\n  userR,\n});\nexport default connect(mapStateToProps, null)(MyCareerTrack);\n","/Users/hugnnt/Documents/Freland/test-deploy/test-deploy/src/Components/Search/SearchMobile.js",["251","252","253","254","255","256","257","258"],[],"import React, { memo, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nconst SearchMobile = memo(() => {\n  useEffect(() => {}, []);\n\n  const handleLogout = function() {\n    localStorage.removeItem('access-token');\n  }\n\n  return (\n    <div\n      className=\"modal fade modal-fullscreen\"\n      id=\"mainmenumobile\"\n      tabIndex=\"-1\"\n      role=\"dialog\"\n      aria-labelledby=\"mainmenumobileLabel\"\n      aria-hidden=\"true\"\n    >\n      <div className=\"modal-dialog\" role=\"document\">\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <h5 className=\"modal-title\" id=\"mainmenumobileLabel\">\n              Main Menu\n            </h5>\n            <button\n              type=\"button\"\n              className=\"close\"\n              data-dismiss=\"modal\"\n              aria-label=\"Close\"\n            >\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </div>\n          <div className=\"modal-body\">\n            <ul className=\"main-menu\">\n              <li>\n                <a href=\"\" title=\"\">\n                  <i className=\"fas fa-home\"></i> Home\n                </a>\n              </li>\n              <li>\n                <a href=\"\" title=\"\">\n                  <i className=\"fas fa-hashtag\"></i> Explore\n                </a>\n              </li>\n              <li>\n                <a href=\"\" title=\"\">\n                  <i className=\"far fa-bell\"></i> Notifications\n                </a>\n              </li>\n              <li>\n                <a href=\"message.html\" title=\"\">\n                  <i className=\"far fa-envelope\"></i> Messeges\n                </a>\n              </li>\n              <li>\n                <a href=\"\" title=\"\">\n                  <i className=\"fas fa-bookmark\"></i> Saved posts\n                </a>\n              </li>\n              <li>\n                <a href=\"\" title=\"\">\n                  <i className=\"fas fa-walking\"></i> My career tracks\n                </a>\n              </li>\n              <li>\n                <a href=\"\" title=\"\">\n                  <i className=\"fas fa-user\"></i> Profile\n                </a>\n              </li>\n              <li>\n                <a href=\"\" onClick={handleLogout} title=\"\">\n                  <i className=\"fas fa-sign-out\"></i> Logout\n                </a>\n              </li>\n              <li>\n                <a href=\"\" title=\"\">\n                  <i className=\"fas fa-ellipsis-h\"></i> More options\n                </a>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n});\n\nconst mapStateToProps = ({ userInfoR }) => ({ userInfoR });\nexport default connect(mapStateToProps, null)(SearchMobile);\n","/Users/hugnnt/Documents/Freland/test-deploy/test-deploy/src/Redux/reducers/index.js",[],[],"/Users/hugnnt/Documents/Freland/test-deploy/test-deploy/src/Components/Commons/Routes/PrivateRouter.js",[],[],"/Users/hugnnt/Documents/Freland/test-deploy/test-deploy/src/Components/Search/Search.js",["259","260","261","262","263","264","265","266","267","268","269","270"],[],"import React, { memo, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nconst Search = memo(() => {\n  useEffect(() => {}, []);\n\n  const handleLogout = function () {\n    localStorage.removeItem(\"access-token\");\n  };\n  return (\n    <div className=\"col-lg-3 mobileremove\">\n      <aside className=\"sidebar static right\">\n        <div className=\"widget widget-search\">\n          <div className=\"top-search\">\n            <form method=\"post\">\n              <input type=\"text\" placeholder=\"Searching for people,  etc\" />\n              <button data-ripple=\"\">\n                <i className=\"fas fa-search\"></i>\n              </button>\n            </form>\n          </div>\n        </div>\n        {/* <!-- page like widget --> */}\n        <div className=\"widget widget-main-menu\">\n          <ul className=\"main-menu\">\n            <li>\n              <Link to={\"/\"}>\n                <i className=\"fas fa-home\"></i> Home\n              </Link>\n            </li>\n            <li>\n              <a href=\"\" title=\"\">\n                <i className=\"fas fa-hashtag\"></i> Explore\n              </a>\n            </li>\n            <li>\n              <a href=\"\" title=\"\">\n                <i className=\"far fa-bell\"></i> Notifications\n              </a>\n            </li>\n            <li>\n              <a href=\"message.html\" title=\"\">\n                <i className=\"far fa-envelope\"></i> Messeges\n              </a>\n            </li>\n            <li>\n              <a href=\"\" title=\"\">\n                <i className=\"fas fa-bookmark\"></i> Saved posts\n              </a>\n            </li>\n            <li>\n              <Link to={\"/my-career-tracks\"}>\n                <i className=\"fas fa-walking\"></i> My career tracks\n              </Link>\n            </li>\n            <li>\n              <a href=\"\" title=\"\">\n                <i className=\"fas fa-user\"></i> Profile\n              </a>\n            </li>\n            <li>\n              <a href=\"\" onClick={handleLogout} title=\"\">\n                <i className=\"fas fa-sign-out\"></i> Logout\n              </a>\n            </li>\n            <li>\n              <a href=\"\" title=\"\">\n                <i className=\"fas fa-ellipsis-h\"></i> More options\n              </a>\n            </li>\n          </ul>\n        </div>\n        {/* <!-- Shortcuts --> */}\n\n        <div className=\"widget footer-links stick-widget\">\n          <ul>\n            <li>\n              <a href=\"#\" title=\"\">\n                About\n              </a>{\" \"}\n              |\n            </li>\n            <li>\n              <a href=\"#\" title=\"\">\n                Accessibility\n              </a>{\" \"}\n              |\n            </li>\n            <li>\n              <a href=\"#\" title=\"\">\n                User Agreement\n              </a>{\" \"}\n              |\n            </li>\n            <li>\n              <a href=\"#\" title=\"\">\n                Privacy Policy\n              </a>{\" \"}\n              |\n            </li>\n            <li>\n              <a href=\"#\" title=\"\">\n                Cookie Policy\n              </a>{\" \"}\n              |\n            </li>\n            <li>\n              <a href=\"#\" title=\"\">\n                More\n              </a>\n            </li>\n          </ul>\n          <p>@ 2022 CareerLadder.</p>\n        </div>\n      </aside>\n    </div>\n  );\n});\n\nconst mapStateToProps = ({ userInfoR }) => ({ userInfoR });\nexport default connect(mapStateToProps, null)(Search);\n","/Users/hugnnt/Documents/Freland/test-deploy/test-deploy/src/Components/CreateCareerTrack/Action.js",["271"],[],"import actionTypes from \"../../Redux/constants/actionTypes\";\nimport industryApi from \"../../Apis/industryApi\";\nimport careerTrackApi from \"../../Apis/careerTrackApi\";\nimport skillCategoryApi from \"../../Apis/skillCategoryApi\";\nimport skillApi from \"../../Apis/skillApi\";\nimport vars from \"../../Utils/vars\";\nimport { toast } from \"react-toastify\";\n\nconst minLimit = vars.minLimit;\nconst updateStore = (value, actionType = actionTypes.CREATE_NEW_TRACK) => {\n  return (dispatch) => {\n    dispatch({ type: actionType, value });\n  };\n};\n\nconst getAllIndustry = () => {\n  return async (dispatch) => {\n    try {\n      let limit = minLimit;\n      let result = [];\n      while (true) {\n        let data = (await industryApi.getIndustries({ limit })) || {};\n        if (!data.last_evaluated_key) {\n          result = data?.items || [];\n          break;\n        }\n        limit += minLimit;\n      }\n      dispatch(updateStore({ industries: result }));\n      return result;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nconst getIndustryById = (industry_id) => {\n  return async (dispatch) => {\n    try {\n      const result = await industryApi.getIndustryById(industry_id);\n      return result || {};\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nconst getAllTrackByIndustry = (industry_id) => {\n  return async (dispatch) => {\n    try {\n      const limit = minLimit;\n      let result = [];\n      while (true) {\n        const data =\n          (await careerTrackApi.getByIndustry({ limit, industry_id })) || {};\n        if (!data.last_evaluated_key) {\n          result = data?.items || [];\n          break;\n        }\n        limit += minLimit;\n      }\n      dispatch(updateStore({ tracksByIndustry: result }));\n      return result;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nconst getAllSkillCategory = () => {\n  return async (dispatch) => {\n    try {\n      let limit = minLimit;\n      let result = [];\n      while (true) {\n        let data = (await skillCategoryApi.get({ limit })) || {};\n        if (!data.last_evaluated_key) {\n          result = data?.items || [];\n          break;\n        }\n        limit += minLimit;\n      }\n      dispatch(updateStore({ skillCategories: result }));\n      return result;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nconst getAllSkill = () => {\n  return async (dispatch) => {\n    try {\n      let limit = minLimit;\n      let result = [];\n      while (true) {\n        const data = (await skillApi.getSkills({ limit })) || {};\n        if (!data.last_evaluated_key) {\n          result = data?.items || [];\n          break;\n        }\n        limit += minLimit;\n      }\n      dispatch(updateStore({ skills: result }));\n      return result;\n    } catch (e) {\n      console.log(e);\n    }\n  };\n};\n\nconst getCareerTrackByUser = (userId) => {\n  return async (dispatch) => {\n    try {\n      let limit = minLimit;\n      let result = [];\n      while (true) {\n        const data =\n          (await careerTrackApi.getByUser({ user_id: userId }, limit)) || {};\n        if (!data.last_evaluated_key) {\n          result = data?.items || [];\n          break;\n        }\n        limit += minLimit;\n      }\n      return result;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nconst getCareerTrack = (id) => {\n  try {\n    return careerTrackApi.getById({career_track_id: id});\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nconst createCareerTrack = (params) => {\n  return async (dispatch) => {\n    try {\n      await careerTrackApi.create(params);\n      toast.success(\"Create successfully!\", vars.toastCss);\n    } catch (e) {\n      console.log(e);\n      toast.error(\"Create error!\", vars.toastCss);\n    }\n  };\n};\n\nconst updateCareerTrack = (params) => {\n  return async (dispatch) => {\n    try {\n      await careerTrackApi.update(params);\n      toast.success(\"Update successfully!\", vars.toastCss);\n      return true;\n    } catch (e) {\n      console.log(e);\n      toast.error(\"Update error!\", vars.toastCss);\n      return false;\n    }\n  };\n};\n\nexport {\n  getAllIndustry,\n  getIndustryById,\n  getAllSkillCategory,\n  getAllTrackByIndustry,\n  getAllSkill,\n  createCareerTrack,\n  getCareerTrackByUser,\n  updateCareerTrack,\n  getCareerTrack,\n};\n","/Users/hugnnt/Documents/Freland/test-deploy/test-deploy/src/Components/UserBio/Action.js",[],[],"/Users/hugnnt/Documents/Freland/test-deploy/test-deploy/src/Components/Commons/Fields/Input.js",[],[],"/Users/hugnnt/Documents/Freland/test-deploy/test-deploy/src/Utils/vars.js",["272"],[],"export default {\n  minLimit: 200,\n  desiredLevel: [\n    \"Beginner\",\n    \"Know-how\",\n    \"Applied Experience\",\n    \"Strong Experience\",\n    \"Expert\",\n  ],\n  postStatus: {\n    new: \"new\",\n    outdated: \"outdated\",\n    published: \"published\",\n  },\n  toastCss: {\n    position: \"top-center\",\n    autoClose: 1000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n    theme: \"light\",\n  },\n};\n","/Users/hugnnt/Documents/Freland/test-deploy/test-deploy/src/Redux/constants/actionTypes.js",[],[],"/Users/hugnnt/Documents/Freland/test-deploy/test-deploy/src/Apis/userApi.js",["273"],[],"import { param } from \"jquery\";\nimport axiosClient from \"./axiosClient\";\n\nconst userApi = {\n  login: async (params) => {\n    const url = '/v1/login/access-token/';\n    const { username, password } = params;\n    let body = new URLSearchParams({\n      username, password\n    })\n    const result = await axiosClient.post(url, body);\n    return result;\n  },\n\n  register: async (params) => {\n    const url = '/v1/users/open';\n    const { name, email, password } = params;\n    const result = await axiosClient.post(url, {name, email, password});\n    return result;\n  },\n\n  getCurrentUser: async () => {\n    const url = '/v1/users/current/me';\n    const result = await axiosClient.get(url);\n    return result;\n  },\n\n  testToken: async () => {\n    const url = 'v1/login/test-token';\n    return axiosClient.post(url, \"\");\n  }\n\n  \n}\n\nexport default userApi;","/Users/hugnnt/Documents/Freland/test-deploy/test-deploy/src/Components/MyCareerTracks/Action.js",["274","275","276"],[],"import actionTypes from \"../../Redux/constants/actionTypes\";\nimport industryApi from \"../../Apis/industryApi\";\nimport careerTrackApi from \"../../Apis/careerTrackApi\";\nimport skillCategoryApi from \"../../Apis/skillCategoryApi\";\nimport skillApi from \"../../Apis/skillApi\";\nimport vars from \"../../Utils/vars\";\nimport { toast } from \"react-toastify\";\n\nconst minLimit = vars.minLimit;\nconst updateStore = (value, actionType = actionTypes.MY_CAREER_TRACK) => {\n  return (dispatch) => {\n    dispatch({ type: actionType, value });\n  };\n};\n\nconst getCareerTrackByUser = (userId) => {\n  return async (dispatch) => {\n    try {\n      let limit = minLimit;\n      let result = [];\n      while (true) {\n        const data =\n          (await careerTrackApi.getByUser({ user_id: userId }, limit)) || {};\n        if (!data.last_evaluated_key) {\n          result = data?.items || [];\n          break;\n        }\n        limit += minLimit;\n      }\n      dispatch(updateStore({ trackList: result }));\n      return result;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nconst deleteCareerTrack = async (id) => {\n  try {\n    await careerTrackApi.delete(id);\n    toast.success(\"Create successfully!\", vars.toastCss);\n    return;\n  } catch (error) {\n    toast.error(\"Create error!\", vars.toastCss);\n    console.log(error);\n  }\n};\n\nexport { getCareerTrackByUser, deleteCareerTrack };\n","/Users/hugnnt/Documents/Freland/test-deploy/test-deploy/src/Components/CareerTracks/Actions.js",[],[],"/Users/hugnnt/Documents/Freland/test-deploy/test-deploy/src/Components/Register/Actions.js",[],[],"/Users/hugnnt/Documents/Freland/test-deploy/test-deploy/src/Components/Commons/Modal/QuestionModal.js",["277"],[],"import React, { memo } from \"react\";\n\nconst QuestionModal = memo((props) => {\n  const {\n    id,\n    header,\n    content,\n    handleSubmit = () => {},\n    handleClose = () => {},\n  } = props;\n  return (\n    <div\n      className={\"modal fade\"}\n      id={id}\n      data-backdrop=\"static\"\n      tabIndex=\"-1\"\n      role=\"dialog\"\n      aria-hidden=\"true\"\n      aria-expanded=\"true\"\n      aria-labelledby={id}\n    >\n      <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <h5 className=\"modal-title\">{header}</h5>\n          </div>\n          <div className=\"modal-body\">{content}</div>\n          <div className=\"modal-footer\">\n            <button\n              id=\"close-delete-track-modal\"\n              type=\"button\"\n              className=\"btn\"\n              data-dismiss=\"modal\"\n              onClick={handleClose}\n            >\n              Close\n            </button>\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              onClick={handleSubmit}\n            >\n              save\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n});\n\nexport default QuestionModal;\n","/Users/hugnnt/Documents/Freland/test-deploy/test-deploy/src/Redux/reducers/userR.js",[],[],"/Users/hugnnt/Documents/Freland/test-deploy/test-deploy/src/Redux/reducers/loadingR.js",[],[],"/Users/hugnnt/Documents/Freland/test-deploy/test-deploy/src/Redux/reducers/createNewTrackR.js",[],[],"/Users/hugnnt/Documents/Freland/test-deploy/test-deploy/src/Redux/reducers/careerTrackR.js",[],[],"/Users/hugnnt/Documents/Freland/test-deploy/test-deploy/src/Redux/reducers/myCareerTrackR.js",[],[],"/Users/hugnnt/Documents/Freland/test-deploy/test-deploy/src/Apis/careerTrackApi.js",[],[],"/Users/hugnnt/Documents/Freland/test-deploy/test-deploy/src/Apis/skillApi.js",[],[],"/Users/hugnnt/Documents/Freland/test-deploy/test-deploy/src/Apis/industryApi.js",[],[],"/Users/hugnnt/Documents/Freland/test-deploy/test-deploy/src/Apis/skillCategoryApi.js",[],[],"/Users/hugnnt/Documents/Freland/test-deploy/test-deploy/src/Apis/axiosClient.js",["278"],[],"import axios from 'axios';\nimport queryString from 'query-string';\n\nconst axiosClient = axios.create({\n  baseURL: 'http://api.dev.careerladder.today/api/',\n  headers: {\n    'accept': 'application/json'\n  },\n  // paramsSerializer: params => {queryString.stringify(params)},\n});\n\naxiosClient.interceptors.request.use(async (config) => {\n  const token = localStorage.getItem('access-token');\n  if (token) {\n    config.headers.Authorization = `bearer ${token}`;\n  }\n  return config;\n});\n\naxiosClient.interceptors.response.use((response) => {\n  if (response && response.data) {\n    return response.data;\n  }\n  return response;\n}, (error) => {\n  const { config, response } = error;\n  if (config.url === \"v1/login/test-token\") {\n    const { data = {} } = response;\n    if(data.detail === \"Could not validate credentials\") {\n      window.location.href = window.location.origin + \"/login\";\n    }\n  }\n  throw error;\n});\n\nexport default axiosClient;","/Users/hugnnt/Documents/Freland/test-deploy/test-deploy/src/Utils/functions.js",["279"],[],"export default {\n  convertArrayToObject: (array = [], key) => {\n    const obj = {};\n    for (const item of array) {\n      if (!item[key]) return {};\n      obj[item[key]] = item;\n    }\n    return obj;\n  },\n  convertObjectToArray: (obj) => {\n    let arr = [];\n    for (const key in obj) {\n      arr.push(obj[key]);\n    }\n    return arr;\n  },\n  convertDateTime: (date) => {\n    const datetime = new Date(date);\n    if (isNaN(datetime)) return \"\";\n    return datetime.toLocaleString(\"en-US\", {\n      year: \"numeric\",\n      month: \"long\",\n      day: \"numeric\",\n      hour: \"numeric\",\n      minute: \"numeric\",\n      hour12: true,\n    });\n  },\n};\n",{"ruleId":"280","severity":1,"message":"281","line":68,"column":15,"nodeType":"282","endLine":68,"endColumn":65},{"ruleId":"283","severity":1,"message":"284","line":35,"column":46,"nodeType":"285","messageId":"286","endLine":35,"endColumn":56},{"ruleId":"283","severity":1,"message":"287","line":114,"column":31,"nodeType":"285","messageId":"286","endLine":114,"endColumn":37},{"ruleId":"283","severity":1,"message":"288","line":114,"column":39,"nodeType":"285","messageId":"286","endLine":114,"endColumn":45},{"ruleId":"283","severity":1,"message":"289","line":114,"column":47,"nodeType":"285","messageId":"286","endLine":114,"endColumn":54},{"ruleId":"290","severity":1,"message":"291","line":150,"column":21,"nodeType":"282","endLine":150,"endColumn":75},{"ruleId":"290","severity":1,"message":"291","line":166,"column":19,"nodeType":"282","endLine":166,"endColumn":77},{"ruleId":"290","severity":1,"message":"291","line":202,"column":19,"nodeType":"282","endLine":202,"endColumn":77},{"ruleId":"283","severity":1,"message":"292","line":26,"column":7,"nodeType":"285","messageId":"286","endLine":26,"endColumn":14},{"ruleId":"293","severity":1,"message":"294","line":146,"column":6,"nodeType":"295","endLine":146,"endColumn":8,"suggestions":"296"},{"ruleId":"290","severity":1,"message":"297","line":354,"column":15,"nodeType":"282","endLine":357,"endColumn":16},{"ruleId":"293","severity":1,"message":"298","line":15,"column":6,"nodeType":"295","endLine":15,"endColumn":8,"suggestions":"299"},{"ruleId":"300","severity":1,"message":"301","line":28,"column":42,"nodeType":"302","messageId":"303","endLine":28,"endColumn":44},{"ruleId":"290","severity":1,"message":"297","line":81,"column":19,"nodeType":"282","endLine":81,"endColumn":44},{"ruleId":"290","severity":1,"message":"297","line":87,"column":21,"nodeType":"282","endLine":92,"endColumn":22},{"ruleId":"290","severity":1,"message":"297","line":116,"column":27,"nodeType":"282","endLine":116,"endColumn":70},{"ruleId":"290","severity":1,"message":"297","line":121,"column":29,"nodeType":"282","endLine":126,"endColumn":30},{"ruleId":"290","severity":1,"message":"297","line":131,"column":33,"nodeType":"282","endLine":131,"endColumn":66},{"ruleId":"300","severity":1,"message":"301","line":28,"column":42,"nodeType":"302","messageId":"303","endLine":28,"endColumn":44},{"ruleId":"290","severity":1,"message":"297","line":91,"column":21,"nodeType":"282","endLine":91,"endColumn":46},{"ruleId":"290","severity":1,"message":"297","line":97,"column":23,"nodeType":"282","endLine":102,"endColumn":24},{"ruleId":"290","severity":1,"message":"297","line":126,"column":29,"nodeType":"282","endLine":126,"endColumn":72},{"ruleId":"290","severity":1,"message":"297","line":131,"column":31,"nodeType":"282","endLine":136,"endColumn":32},{"ruleId":"290","severity":1,"message":"297","line":141,"column":35,"nodeType":"282","endLine":141,"endColumn":68},{"ruleId":"304","severity":1,"message":"305","line":97,"column":21,"nodeType":"282","endLine":97,"endColumn":64},{"ruleId":"283","severity":1,"message":"287","line":117,"column":31,"nodeType":"285","messageId":"286","endLine":117,"endColumn":37},{"ruleId":"283","severity":1,"message":"288","line":117,"column":39,"nodeType":"285","messageId":"286","endLine":117,"endColumn":45},{"ruleId":"283","severity":1,"message":"289","line":117,"column":47,"nodeType":"285","messageId":"286","endLine":117,"endColumn":54},{"ruleId":"293","severity":1,"message":"298","line":9,"column":6,"nodeType":"295","endLine":9,"endColumn":8,"suggestions":"306"},{"ruleId":"307","severity":1,"message":"308","line":20,"column":9,"nodeType":"282","endLine":20,"endColumn":70},{"ruleId":"290","severity":1,"message":"291","line":27,"column":19,"nodeType":"282","endLine":27,"endColumn":78},{"ruleId":"293","severity":1,"message":"309","line":29,"column":6,"nodeType":"295","endLine":29,"endColumn":8,"suggestions":"310"},{"ruleId":"290","severity":1,"message":"291","line":37,"column":17,"nodeType":"282","endLine":37,"endColumn":37},{"ruleId":"290","severity":1,"message":"291","line":42,"column":17,"nodeType":"282","endLine":42,"endColumn":37},{"ruleId":"290","severity":1,"message":"291","line":47,"column":17,"nodeType":"282","endLine":47,"endColumn":37},{"ruleId":"290","severity":1,"message":"291","line":57,"column":17,"nodeType":"282","endLine":57,"endColumn":37},{"ruleId":"290","severity":1,"message":"291","line":62,"column":17,"nodeType":"282","endLine":62,"endColumn":37},{"ruleId":"290","severity":1,"message":"291","line":67,"column":17,"nodeType":"282","endLine":67,"endColumn":37},{"ruleId":"290","severity":1,"message":"291","line":72,"column":17,"nodeType":"282","endLine":72,"endColumn":60},{"ruleId":"290","severity":1,"message":"291","line":77,"column":17,"nodeType":"282","endLine":77,"endColumn":37},{"ruleId":"290","severity":1,"message":"291","line":32,"column":15,"nodeType":"282","endLine":32,"endColumn":35},{"ruleId":"290","severity":1,"message":"291","line":37,"column":15,"nodeType":"282","endLine":37,"endColumn":35},{"ruleId":"290","severity":1,"message":"291","line":47,"column":15,"nodeType":"282","endLine":47,"endColumn":35},{"ruleId":"290","severity":1,"message":"291","line":57,"column":15,"nodeType":"282","endLine":57,"endColumn":35},{"ruleId":"290","severity":1,"message":"291","line":62,"column":15,"nodeType":"282","endLine":62,"endColumn":58},{"ruleId":"290","severity":1,"message":"291","line":67,"column":15,"nodeType":"282","endLine":67,"endColumn":35},{"ruleId":"290","severity":1,"message":"291","line":78,"column":15,"nodeType":"282","endLine":78,"endColumn":36},{"ruleId":"290","severity":1,"message":"291","line":84,"column":15,"nodeType":"282","endLine":84,"endColumn":36},{"ruleId":"290","severity":1,"message":"291","line":90,"column":15,"nodeType":"282","endLine":90,"endColumn":36},{"ruleId":"290","severity":1,"message":"291","line":96,"column":15,"nodeType":"282","endLine":96,"endColumn":36},{"ruleId":"290","severity":1,"message":"291","line":102,"column":15,"nodeType":"282","endLine":102,"endColumn":36},{"ruleId":"290","severity":1,"message":"291","line":108,"column":15,"nodeType":"282","endLine":108,"endColumn":36},{"ruleId":"311","severity":1,"message":"312","line":60,"column":9,"nodeType":"285","messageId":"313","endLine":60,"endColumn":14},{"ruleId":"314","severity":1,"message":"315","line":1,"column":1,"nodeType":"316","endLine":25,"endColumn":3},{"ruleId":"283","severity":1,"message":"317","line":1,"column":10,"nodeType":"285","messageId":"286","endLine":1,"endColumn":15},{"ruleId":"283","severity":1,"message":"318","line":2,"column":8,"nodeType":"285","messageId":"286","endLine":2,"endColumn":19},{"ruleId":"283","severity":1,"message":"319","line":4,"column":8,"nodeType":"285","messageId":"286","endLine":4,"endColumn":24},{"ruleId":"283","severity":1,"message":"320","line":5,"column":8,"nodeType":"285","messageId":"286","endLine":5,"endColumn":16},{"ruleId":"321","severity":1,"message":"322","line":12,"column":5,"nodeType":"282","endLine":21,"endColumn":6},{"ruleId":"283","severity":1,"message":"323","line":2,"column":8,"nodeType":"285","messageId":"286","endLine":2,"endColumn":19},{"ruleId":"314","severity":1,"message":"315","line":1,"column":1,"nodeType":"316","endLine":29,"endColumn":3},"jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement","no-unused-vars","'rememberMe' is assigned a value but never used.","Identifier","unusedVar","'values' is assigned a value but never used.","'errors' is assigned a value but never used.","'touched' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'formRef' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'careerTrackId', 'dispatch', and 'id'. Either include them or remove the dependency array.","ArrayExpression",["324"],"The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["325"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["326"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","React Hook useEffect has missing dependencies: 'getData' and 'id'. Either include them or remove the dependency array.",["327"],"no-const-assign","'limit' is constant.","const","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'param' is defined but never used.","'industryApi' is defined but never used.","'skillCategoryApi' is defined but never used.","'skillApi' is defined but never used.","jsx-a11y/role-supports-aria-props","The attribute aria-expanded is not supported by the role dialog.","'queryString' is defined but never used.",{"desc":"328","fix":"329"},{"desc":"330","fix":"331"},{"desc":"330","fix":"332"},{"desc":"333","fix":"334"},"Update the dependencies array to be: [careerTrackId, dispatch, id]",{"range":"335","text":"336"},"Update the dependencies array to be: [dispatch]",{"range":"337","text":"338"},{"range":"339","text":"338"},"Update the dependencies array to be: [getData, id]",{"range":"340","text":"341"},[4480,4482],"[careerTrackId, dispatch, id]",[487,489],"[dispatch]",[289,291],[879,881],"[getData, id]"]